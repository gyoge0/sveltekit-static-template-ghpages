name: release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  id-token: write
  pages: write

jobs:
  release-please:
    name: Release Please
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release-please.outputs.release_created }}
      release_id: ${{ steps.release-please.outputs.id }}
      release_tag: ${{ steps.release-please.outputs.tag_name }}
    steps:
      - name: Release Please
        uses: google-github-actions/release-please-action@v3
        id: release-please
        with:
          release-type: node

          package-name: release-please-action
          bump-minor-pre-major: true

  build-site:
    name: Build site
    needs: [release-please]
    if: ${{ needs.release-please.outputs.release_created }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ vars.PNPM_MAJOR }}

      - name: Sync node version and setup cache
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: pnpm

      - name: Install frontend dependencies
        run: pnpm install

      - name: Build
        run: pnpm build

      - name: Upload Artifacts
        uses: actions/upload-pages-artifact@v1
        with:
          path: build

      - name: Deploy
        id: deployment
        uses: actions/deploy-pages@v1

  publish-release:
    runs-on: ubuntu-20.04
    needs: [release-please, build-site]
    if: ${{ needs.release-please.outputs.release_created }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Publish release
        id: publish-release
        env:
          TAG_NAME: ${{ needs.release-please.outputs.release_tag }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release edit $TAG_NAME --draft=false
